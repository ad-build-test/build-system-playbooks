
- name: Deploy app, and update envPaths
  hosts: all
  # All vars from ioc_deploy.yml are accessible
  gather_facts: no
  tasks:
  # TODO: The ansible.builtin.unarchive is idempotent, so should work for config management
  # EXCEPT, I alter the envPaths files after extraction, so if you ran this playbook again 
  # with the same arguments, itll say 'changed' instead of 'ok'. Because the extracted
  # contents are no longer the same. How do I work around this? Should I recreate the 
  # tarball in the python backend with envPaths already changed?

  # Solution:  I think we should just do a copy instead, so unarchive it in python backend
  # then make envPaths change, then copy it over
# Patrick - push your current changes, then build deployment_controller img, then test out 
# deployment demo functinoality, Then come back to here.
  - name: Extract build results to '{{ ioc_release_folder }}/{{ component_name }}'
    ansible.builtin.unarchive:
      src: '{{ tarball }}'
      dest: '{{ ioc_release_folder }}/{{ component_name }}'

  - name: Update envPaths (call cram script for this) '{{ facility }}'
    ansible.builtin.shell: python3 {{ playbook_path }}/library/env_paths_update.py {{ component_name }} SIOC {{ ioc_release_folder }} MASTER {{ tag }}
  # MASTER - i think its safe to assume you want all IOCs in a different facility
  # to update their envPaths to match, regardless if thats the one you deployed
  
  # If have time, make it ansible module for idempotency
  # - name: Update envPaths (call cram script for this) '{{ facility }}'
  #   # ansible.builtin.shell: python3 env_paths_update.py {{ app }}
  #   env_paths_update:
  #     deploy_type: 'IOC' 
  #   register: testout
  # - name: Dump envPaths update output
  #   debug:
  #     msg: '{{ testout }}'