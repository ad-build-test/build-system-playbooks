# How to Run 
# If deploying to multiple facilities, run this playbook multiple times, one for each facility
# ansible-playbook --extra-vars "user=$USER ioc_name=sioc-123-123 executable_path=/afs/slac.stanford.edu/u/cd/pnispero/mps/central_node_ioc/" ./initial_ioc_deploy.yml
# This is for dev, and doesn't include using 'cram' and deploying a component to a 
# deployment location ($APP or $PHYSICS_TOP or $TOOLS/script or $PYDYM etc.)
# Process in detail: https://confluence.slac.stanford.edu/display/LCLSControls/CD+-+Deployment+Stage

# https://docs.ansible.com/ansible/latest/collections/kubernetes/core/k8s_module.html#ansible-collections-kubernetes-core-k8s-module
- name: Build System Deployment
  hosts: localhost
  vars:
    k8s_namespace: 'core-build-system'
  tasks:
# TODO:
# 0) ansible-galaxy collection install kubernetes.core
# 0) Authenticate to the cluster - it automatically gets the credentials/config of localhost machine
# 1) Create namespace
  - name: Create a core-build-system namespace
    kubernetes.core.k8s:
      name: core-build-system
      api_version: v1
      kind: Namespace
      state: present
# 2) core-build-system
  # 2.1) create a temporary directory, git clone all pieces needed (mongodb, core-build-system-deployment, BuildSystem)
  - name: Create temporary directory for deployment
    ansible.builtin.tempfile:
      state: directory
      suffix: temp_deployment
    register: temp_directory
  - name: Git checkout mongodb deployment
    ansible.builtin.git:
      repo: 'https://github.com/eed-web-application/eed-accel-webapp-clusters-wide-setup.git'
      dest: '{{ temp_directory.path }}/eed-accel-webapp-clusters-wide-setup'
      version: main
  - name: Git checkout core-build-system deployment
    ansible.builtin.git:
      repo: 'https://github.com/eed-web-application/core-build-system-deployment.git'
      dest: '{{ temp_directory.path }}/core-build-system-deployment'
      version: ad-build-dev
  - name: Git checkout BuildSystem deployment
    ansible.builtin.git:
      repo: 'https://github.com/ad-build-test/BuildSystem.git'
      dest: '{{ temp_directory.path }}/BuildSystem'
      version: main
  # 2.2) apply server side mongodb resources
  - name: Apply server side mongodb resources
    kubernetes.core.k8s:
      namespace: '{{ k8s_namespace }}'
      state: present
      src: '{{ temp_directory.path }}/eed-accel-webapp-clusters-wide-setup/test/mongodb-operator/crd-1.16.2.yaml'
      apply: yes 
  # 2.3) apply core-build-system-deployment
  - name: Find all core-build-system-deployment YAML files
    ansible.builtin.find:
      paths: "{{ temp_directory.path }}/core-build-system-deployment/test/"
      patterns: "*.yaml,*.yml"
      excludes: "kustomization.yaml"
    register: yaml_files
  - name: Apply core-build-system backend service
    kubernetes.core.k8s:
      namespace: '{{ k8s_namespace }}'
      state: present
      src: "{{ item.path }}"
    loop: "{{ yaml_files.files }}"
# 3) BuildSystem
  # 3.1) apply artifact api service
  - name: Find all artifact storage api YAML files
    ansible.builtin.find:
      paths: "{{ temp_directory.path }}/BuildSystem/artifact_storage/api/artifact_deployment/"
      patterns: "*.yaml,*.yml"
      excludes: "kustomization*"
    register: yaml_files
  - name: Apply artifact storage api service
    kubernetes.core.k8s:
      namespace: '{{ k8s_namespace }}'
      state: present
      src: "{{ item.path }}"
    loop: "{{ yaml_files.files }}"
  # 3.2) apply deployment controller (TBD)

# 4) Inspect the cluster make sure everything looks good
  # 4.1) Run sample curl request to backend to see if its working
